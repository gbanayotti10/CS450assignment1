getwd()
setwd()
setwd("~/MATH462")
getwd()
getwd()
demandv0<- read.csv("C:/MATH 462/DemandData.csv")
demandv0<- read.csv("DemandData.csv")
predict_fare <- read.csv("PredictFare.csv")
View(demandv0)
View(predict_fare)
library(dplyr)
library(ggplot2)
lm(booking)
lm(data_vis)
library(ggplot2)
library(dplyr)
library(ggplot2)
Import Data
```{r}
data <- read.csv("DemandData.csv")
# convert season index to bool
data$seasonindex <- data$seasonindex == "Peak"
c("rows", "cols") %>% print
dim(data) %>% print
data <- read.csv("DemandData.csv")
# convert season index to bool
data$seasonindex <- data$seasonindex == "Peak"
c("rows", "cols") %>% print
dim(data) %>% print
```{r}
summary(data)
summary(data)
There is a column with an NA (row 208). I will remove it
```{r}
data <- data[-208,]
data <- data[-208,]
```{r}
pairs(data, )
there's these 3 outliers which makes the data hard to read. I'll take those out and peek at them
```{r}
outliers <- which(data$bookings > 50)
print(outliers)
cat("\n")
print.data.frame(data[outliers,])
data_no_outlier <- data[-outliers,]
data_vis$seasonindex <- data_vis$seasonindex * 1
set.seed(1)
data_vis$bookings <- jitter(data_vis$bookings)
data_vis$fare <- jitter(data_vis$fare)
data_vis$seasonindex <- jitter(data_vis$seasonindex, amount = .1)
outliers <- which(data$bookings > 50)
print(outliers)
cat("\n")
print.data.frame(data[outliers,])
data_no_outlier <- data[-outliers,]
data_vis <- data_no_outlier
data_vis$seasonindex <- data_vis$seasonindex * 1
set.seed(1)
data_vis$bookings <- jitter(data_vis$bookings)
data_vis$fare <- jitter(data_vis$fare)
data_vis$seasonindex <- jitter(data_vis$seasonindex, amount = .1)
Yeah, they seem like normal point that went off for some reason. Perhaps with good reason.
Perhaps the high bookings in peak season are things like holidays, and the high bookings during off-peak seasons are things like parties or school trips. I don't think these points should be taken into account, since they are not normal predictable days (maybe holidays should have their own prediction).
re-visualize
```{r}
pairs(data_vis, panel = panel.smooth)
```{r}
cat("\n\nData with outliers removed\n")
cor(data_no_outlier)
what to see here:
-   very strong relationship between season and fare
-   prices much more expensive in the peak seasons
-   weak relationship between season and bookings
-   bookings are slightly increased (linearly) in peak seasons but not tremendously
-   there is no linear relationship between fare and number of bookings
-   I would be surprised if there is no relationship at all though. I can make out a slight quadratic relationship. this would make some sense since people may want to book when fares are low, but also more people are booking when there is a peak season (and thus fares are high)
```{r}
ggplot(data_no_outlier, aes(x=seasonindex, y=fare)) + geom_violin()
I think it's weird that season doesn't affect booking more. I think the cutoff for being in peak season is poorly done.
```{r}
ggplot(data_no_outlier, aes(x=fare, y=bookings, col=seasonindex))+ geom_point() + geom_smooth() + labs(col = "Peak Season?") + geom_jitter()
Looking at it like this, I think an exponential relationship between bookings and fare to be related makes sense
That does it. Definitely a negative relationship, even if not linear.
```{r}
data_no_out_pseudo$bookings <- data_no_out_pseudo$bookings + 1
ggplot(data_no_out_pseudo, aes(x=fare, y=bookings, col=seasonindex))+ geom_point() + geom_smooth() + labs(col = "Peak Season?") + geom_jitter() + scale_y_continuous(trans="log2")
data_no_out_pseudo <- data_no_outlier
data_no_out_pseudo$bookings <- data_no_out_pseudo$bookings + 1
ggplot(data_no_out_pseudo, aes(x=fare, y=bookings, col=seasonindex))+ geom_point() + geom_smooth() + labs(col = "Peak Season?") + geom_jitter() + scale_y_continuous(trans="log2")
with a log scale this definitely looks more accurate.
lm(data)
lm(data$bookings)
lm(data$bookings ~ data$fare)
View(demandv0)
lm(data$bookings ~ data$fare * data$)
demand_test <- demandv0 %>% mutate(peak = ifelse(seasonindex=="Off-Peak", 0, 1))
View(demand_test)
lm(demand_test$bookings ~ demand_test$fare*demand_test$peak)
lm(demand_test$bookings ~ demand_test$fare*demand_test$peak)
log(0)
log(1)
log(inf)
View(demand_test)
lm(demand_test$bookings ~ demand_test$fare*demand_test$peak)
# Linear Model V0
Linear_Model <- lm(bookings ~ fare + seasonindex, data = demandv1)
demandv1<-demandv0[demandv0$bookings<50,]
library(caret)
# Linear Model V0
Linear_Model <- lm(bookings ~ fare + seasonindex, data = demandv1)
Linear_Model
# Residual
linear_resid <- resid(Linear_Model)
sum(linear_resid)
plot(linear_resid, pch =19, col = "blue")
abline(0,0, lwd=4)
# Q-Q Plot
qqnorm(linear_resid)
qqline(linear_resid)
# Linear Model V1/V2 LOOCV / K-fold
train_control <- trainControl(method = "LOOCV")
demand_nona <- na.omit(demandv1)
model <- train(bookings ~ fare + seasonindex, data = demand_nona, method = "lm", trControl = train_control)
print(model)
data_no_out_pseudo <- data_no_outlier
data_no_out_pseudo$bookings <- data_no_out_pseudo$bookings + 1
ggplot(data_no_out_pseudo, aes(x=fare, y=bookings, col=seasonindex))+ geom_point() + geom_smooth() + labs(col = "Peak Season?") + geom_jitter() + scale_y_continuous(trans="log2")
# Linear Model V0
Linear_Model <- lm(bookings ~ fare + seasonindex, data = demandv1)
Linear_Model
# Q-Q Plot
qqnorm(linear_resid)
qqline(linear_resid)
setwd(/CS450)
setwd("CS450")
setwd("\CS450")
setwd("~/CS450/app1/")
